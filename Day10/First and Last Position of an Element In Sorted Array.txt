int firstoccu(vector<int>& arr, int n, int x)
{
    int low=0;
    int high=n-1;
    while(low<=high)
    {
        int mid=(low+high)/2;
        if(arr[mid]>x)
            high=mid-1;
        else if(arr[mid]<x)
            low=mid+1;
        else
        {
            if(mid==0 || arr[mid-1]!=arr[mid])
                return mid;
            else
                high=mid-1;
        }
    }
    return -1;
}
int lastoccu(vector<int>& arr, int n, int x)
{
    int low=0;
    int high=n-1;
    while(low<=high)
    {
        int mid=(low+high)/2;
        if(arr[mid]>x)
            high=mid-1;
        else if(arr[mid]<x)
            low=mid+1;
        else
        {
            if(mid==n-1 || arr[mid+1]!=arr[mid])
                return mid;
            else
                low=mid+1;
        }
    }
    return -1;
}



pair<int, int> firstAndLastPosition(vector<int>& arr, int n, int k)
{
    // Write your code here
    int x=firstoccu(arr,n,k);
    int y=lastoccu(arr,n,k);
    pair<int,int> res;
    res.first=x;
    res.second=y;
    return res;
}